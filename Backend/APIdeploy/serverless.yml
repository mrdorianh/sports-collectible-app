service: apideploy-service

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  # create an IAM role that will be used by Lambda functions to access AWS DynamoDB
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:*:*:table/my_table"

# exclude all files
package:
  individually: true
  exclude:
    - ./**

functions:
  share:
    handler: share.handler
    package:
      include:
        - share.py
    events:
      - http:
          path: share
          method: get
    environment:
      DYNAMODB_TABLE: my_table

resources:
  Resources:
    myTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: my_table # replace 'my_table' with the name of your DynamoDB table
        AttributeDefinitions:
          - AttributeName: "userId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "userId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1